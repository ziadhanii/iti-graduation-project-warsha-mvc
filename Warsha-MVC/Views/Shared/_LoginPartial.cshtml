@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @await DisplayUserProfilePictureAsync()

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@functions {
    private async Task<IHtmlContent> DisplayUserProfilePictureAsync()
    {
        var user = await UserManager.GetUserAsync(User);
        if (user?.ProfilePicture != null)
        {
            var base64String = Convert.ToBase64String(user.ProfilePicture);
            var imageSrc = $"data:image/*;base64,{base64String}"; 
            return new HtmlString($"<li class='nav-item'><img class='avatar rounded-circle' alt='profile' src='{imageSrc}' /></li>");
        }
        return HtmlString.Empty;
    }
}
